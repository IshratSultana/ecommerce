<!-- jQuery -->
<script src="/public/plugins/jquery/jquery.min.js"></script>
<!-- Bootstrap 4 -->
<script src="/public/plugins/bootstrap/js/bootstrap.bundle.min.js"></script>
<!-- DataTables  & Plugins -->
<script src="/public/plugins/datatables/jquery.dataTables.min.js"></script>
<script src="/public/plugins/datatables-bs4/js/dataTables.bootstrap4.min.js"></script>
<script src="/public/plugins/datatables-responsive/js/dataTables.responsive.min.js"></script>
<script src="/public/plugins/datatables-responsive/js/responsive.bootstrap4.min.js"></script>
<script src="/public/plugins/datatables-buttons/js/dataTables.buttons.min.js"></script>
<script src="/public/plugins/datatables-buttons/js/buttons.bootstrap4.min.js"></script>
<script src="/public/plugins/jszip/jszip.min.js"></script>
<script src="/public/plugins/pdfmake/pdfmake.min.js"></script>
<script src="/public/plugins/pdfmake/vfs_fonts.js"></script>
<script src="/public/plugins/datatables-buttons/js/buttons.html5.min.js"></script>
<script src="/public/plugins/datatables-buttons/js/buttons.print.min.js"></script>
<script src="/public/plugins/datatables-buttons/js/buttons.colVis.min.js"></script>
<!-- AdminLTE App -->
<script src="/public/dist/js/adminlte.min.js"></script>
<!-- AdminLTE for demo purposes -->
<script src="/public/dist/js/demo.js"></script>
<!-- Page specific script -->
<!-- SweetAlert2 -->
<script src="/public/plugins/sweetalert2/sweetalert2.min.js"></script>
<!-- bootbox -->
<script src="https://cdnjs.cloudflare.com/ajax/libs/bootbox.js/5.5.2/bootbox.min.js"></script>
<script>
    $(function () {
        var Toast = Swal.mixin({
            toast: true,
            position: 'top-end',
            showConfirmButton: false,
            timer: 3000
        });

        $('#prod-list').DataTable({
            "paging": true,
            "lengthChange": false,
            "searching": true,
            "ordering": true,
            "info": true,
            "autoWidth": false,
            "responsive": true,
            "columnDefs": [
                { "orderable": false, "targets": 1 },
                { "orderable": false, "targets": 6 },
            ],
            "order": [[0, "desc"]],
            "initComplete": function () {
                this.api().columns(3).every(function () {
                    var column = this;
                    var select = $('<select class="form-control"><option value="">Category Type</option></select>')
                        .appendTo('#prod-list_wrapper .col-md-6:eq(0)')
                        .on('change', function () {
                            var val = $.fn.dataTable.util.escapeRegex(
                                $(this).val()
                            );

                            column
                                .search(val ? '^' + val + '$' : '', true, false)
                                .draw();
                        });

                    column.data().unique().sort().each(function (d, j) {
                        select.append('<option value="' + d + '">' + d + '</option>')
                    });
                });
            }
        });

        document.getElementById("file").onchange = function () {
            var reader = new FileReader();

            reader.onload = function (e) {
                // get loaded data and render thumbnail.
                document.getElementById("image").src = e.target.result;
                // document.getElementById("image").style.width = "600px";
                // document.getElementById("image").style.height = "300px";
            };

            // read the image file as a data URL.
            reader.readAsDataURL(this.files[0]);
        };

        document.getElementById("file-edit").onchange = function () {
            var reader = new FileReader();

            reader.onload = function (e) {
                // get loaded data and render thumbnail.
                document.getElementById("image-edit").src = e.target.result;
                // document.getElementById("image").style.width = "600px";
                // document.getElementById("image").style.height = "300px";
            };

            // read the image file as a data URL.
            reader.readAsDataURL(this.files[0]);
        };

        function doNecessaryTasksAfterSuccess(msg, eventType) {
            if (eventType !== "delete") {
                eventType === "create" ? $('#add-prod').modal('hide') : $('#edit-prod').modal('hide');
            }
            Toast.fire({
                icon: 'success',
                title: msg
            })
            setTimeout(function () {
                window.location.reload();
            }, 2000)
        }

        $("#add-product-form").submit(function (e) {
            e.preventDefault();
            $.ajax({
                url: '/api/admin/products',
                type: 'POST',
                data: new FormData(this),
                processData: false,
                contentType: false,
                success: function (data) {
                    // console.log("Success")
                    doNecessaryTasksAfterSuccess(data.message, "create")
                }
                , error: function (err) {
                    console.log("Err")
                    console.log(err.responseJSON)

                    if (err.responseJSON.message === "Validation failure!") {
                        if (err.responseJSON.errors.length > 0) {
                            err.responseJSON.errors.map(error => {
                                $('#' + error.param + "-val-err-msg").text(error.msg)
                            })
                        }
                    } else if (err.responseJSON.type !== undefined) {
                        switch (err.responseJSON.type) {
                            case "file-up":
                                $("#file-val-err-msg").text(err.responseJSON.message)
                                break;
                            default:
                                Toast.fire({
                                    icon: 'error',
                                    title: err.responseJSON.message
                                })
                        }
                    }
                }
            });
        });

        /*
        edit product functionality starts
         */
        $(document).on('click', '.edit-prod', function () {
            const id = $(this).data("id");
            console.log(id)
            $.ajax({
                type: 'GET',
                url: '/api/admin/products/' + id,
                success: function (res) {
                    console.log(res)
                    $('#edit-product-form input[name="name"]').val(res.data.name)
                    $('#edit-product-form textarea[name="description"]').val(res.data.description)
                    $('#edit-product-form input[name="unit"]').val(res.data.unit)
                    $('#edit-product-form input[name="price"]').val(res.data.price)
                    $('#edit-product-form input[name="sale_price"]').val(res.data.sale_price)
                    $('#edit-product-form input[name="discount"]').val(res.data.discount)
                    $('#edit-product-form input[name="qty"]').val(res.data.qty)
                    $("#edit-product-form select[name='main_category_id']").val(res.data.main_category_id);
                    $("#edit-product-form select[name='category_id']").val(res.data.category_id);
                    $('#image-edit').attr('src', '/public/uploads/' + res.data.image_name)
                    $('#edit-product-form input[name="uploaded_img_name"]').val(res.data.image_name)
                    $('#edit-product-form input[name="product_id"]').val(res.data.id)
                    $('#edit-prod').modal('show');

                }, error: function (err) {
                    console.log(err);
                }
            });
        })
        /*
        edit product functionality ends
         */

        /*
        update product functionality starts
         */
        $("#edit-product-form").submit(function (e) {
            e.preventDefault();
            $.ajax({
                url: '/api/admin/products/' + $('#edit-product-form input[name="product_id"]').val() + '/update',
                type: 'PUT',
                data: new FormData(this),
                processData: false,
                contentType: false,
                success: function (data) {
                    // console.log("Success")
                    doNecessaryTasksAfterSuccess(data.message, "edit")
                }
                , error: function (err) {
                    console.log("Err")
                    console.log(err.responseJSON)

                    if (err.responseJSON.message === "Validation failure!") {
                        if (err.responseJSON.errors.length > 0) {
                            err.responseJSON.errors.map(error => {
                                $('#' + error.param + "-val-err-msg-edit").text(error.msg)
                            })
                        }
                    } else if (err.responseJSON.type !== undefined) {
                        switch (err.responseJSON.type) {
                            case "file-up":
                                $("#file-val-err-msg-edit").text(err.responseJSON.message)
                                break;
                            default:
                                Toast.fire({
                                    icon: 'error',
                                    title: err.responseJSON.message
                                })
                        }
                    }
                }
            });
        });
        /*
        update product functionality ends
         */

        /*
        delete product functionality starts
         */
        $(document).on('click', ".del-prod", function () {
            var id = $(this).data("id");
            bootbox.confirm("Are you sure?", function (result) {
                if (result) {
                    $.ajax({
                        type: 'DELETE',
                        url: '/api/admin/products/' + id + '/delete',
                        success: function (res) {
                            doNecessaryTasksAfterSuccess(res.message, "delete")
                        }, error: function (err) {
                            console.log(err);
                        }
                    });
                }
            });
        });
        /*
        delete product functionality ends
         */
    });
</script>
