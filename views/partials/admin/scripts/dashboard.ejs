<!-- jQuery -->
<script src="/public/plugins/jquery/jquery.min.js"></script>
<!-- jQuery UI 1.11.4 -->
<script src="/public/plugins/jquery-ui/jquery-ui.min.js"></script>
<!-- Resolve conflict in jQuery UI tooltip with Bootstrap tooltip -->
<script>
    $.widget.bridge('uibutton', $.ui.button)
</script>
<!-- Bootstrap 4 -->
<script src="/public/plugins/bootstrap/js/bootstrap.bundle.min.js"></script>
<!-- ChartJS -->
<script src="/public/plugins/chart.js/Chart.min.js"></script>
<!-- Sparkline -->
<script src="/public/plugins/sparklines/sparkline.js"></script>
<!-- JQVMap -->
<script src="/public/plugins/jqvmap/jquery.vmap.min.js"></script>
<script src="/public/plugins/jqvmap/maps/jquery.vmap.usa.js"></script>
<!-- jQuery Knob Chart -->
<script src="/public/plugins/jquery-knob/jquery.knob.min.js"></script>
<!-- daterangepicker -->
<script src="/public/plugins/moment/moment.min.js"></script>
<script src="/public/plugins/daterangepicker/daterangepicker.js"></script>
<!-- Tempusdominus Bootstrap 4 -->
<script src="/public/plugins/tempusdominus-bootstrap-4/js/tempusdominus-bootstrap-4.min.js"></script>
<!-- Summernote -->
<script src="/public/plugins/summernote/summernote-bs4.min.js"></script>
<!-- overlayScrollbars -->
<script src="/public/plugins/overlayScrollbars/js/jquery.overlayScrollbars.min.js"></script>
<!-- AdminLTE App -->
<script src="/public/dist/js/adminlte.js"></script>
<!-- AdminLTE for demo purposes -->
<script src="/public/dist/js/demo.js"></script>
<!-- AdminLTE dashboard demo (This is only for demo purposes) -->
<script src="/public/dist/js/pages/dashboard.js"></script>

<script>
    /* global Chart:false */

    $(function () {
        'use strict'

        const presentYr = new Date().getFullYear()
        const prevYr = new Date().getFullYear() - 1

        const months = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]

        let dataPresentYr = []
        let dataPrevYr = []

        var chartInfo = <%- JSON.stringify(chartInfo); %>
            console.log("chartInfo", chartInfo);
        var salesOverTime = <%- JSON.stringify(salesOverTime); %>
            console.log("salesOverTime", salesOverTime);

        if (salesOverTime) {
            $('#salesOverTime').text('$' + salesOverTime)
        } else {
            $('#salesOverTime').text('$0')
        }

        for (const [key] of Object.entries(chartInfo)) {
            if (chartInfo[key]['year'] === presentYr) {
                if (months.includes(chartInfo[key]['month'])) {
                    dataPresentYr.push(Math.round(chartInfo[key]['sale']))
                } else {
                    dataPresentYr.push(0)
                }
            } else {
                if (months.includes(chartInfo[key]['month'])) {
                    dataPrevYr.push(Math.round(chartInfo[key]['sale']))
                } else {
                    dataPrevYr.push(0)
                }
            }
        }

        var ticksStyle = {
            fontColor: '#495057',
            fontStyle: 'bold'
        }

        var mode = 'index'
        var intersect = true

        var $salesChart = $('#sales-chart')
        // eslint-disable-next-line no-unused-vars
        var salesChart = new Chart($salesChart, {
            type: 'bar',
            data: {
                labels: ['JAN', 'FEB', 'MAR', 'APR', 'MAY', 'JUN', 'JUL', 'AUG', 'SEP', 'OCT', 'NOV', 'DEC'],
                datasets: [
                    {
                        backgroundColor: '#007bff',
                        borderColor: '#007bff',
                        // data: [1000, 2500, 2700, 2500, 3000, 1000, 2000, 3000, 2500, 2700, 2500, 3000]
                        data: dataPresentYr
                    },
                    {
                        backgroundColor: '#ced4da',
                        borderColor: '#ced4da',
                        // data: [100, 2500, 2700, 2500, 3000, 700, 1700, 2700, 2000, 1800, 1500, 2000]
                        data: dataPrevYr
                    }
                ]
            },
            options: {
                maintainAspectRatio: false,
                tooltips: {
                    mode: mode,
                    intersect: intersect
                },
                hover: {
                    mode: mode,
                    intersect: intersect
                },
                legend: {
                    display: false
                },
                scales: {
                    yAxes: [{
                        // display: false,
                        gridLines: {
                            display: true,
                            lineWidth: '4px',
                            color: 'rgba(0, 0, 0, .2)',
                            zeroLineColor: 'transparent'
                        },
                        ticks: $.extend({
                            beginAtZero: true,

                            // Include a dollar sign in the ticks
                            callback: function (value) {
                                if (value >= 1000) {
                                    value /= 1000
                                    value += 'k'
                                }

                                return '$' + value
                            }
                        }, ticksStyle)
                    }],
                    xAxes: [{
                        display: true,
                        gridLines: {
                            display: false
                        },
                        ticks: ticksStyle
                    }]
                }
            }
        })
    })

</script>
